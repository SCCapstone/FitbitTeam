import { readJsonSync, writeJSONSync } from "fs-extra";
import { join } from "path";
var DEFAULT_FILE_NAME = "data.json";
var FileStorage = (function () {
    function FileStorage(dataPath) {
        this.dataPath = dataPath;
        this.cachedStorage = {};
        this.filePath = join(dataPath, DEFAULT_FILE_NAME);
        try {
            this.cachedStorage = readJsonSync(this.filePath);
        }
        catch (err) {
            if (err.code !== 'ENOENT') {
                throw err;
            }
        }
    }
    FileStorage.prototype.get = function (key) {
        return this.cachedStorage[key];
    };
    FileStorage.prototype.set = function (key, value) {
        this.cachedStorage[key] = value;
        writeJSONSync(this.filePath, this.cachedStorage);
    };
    FileStorage.prototype.remove = function (key) {
        delete this.cachedStorage[key];
        writeJSONSync(this.filePath, this.cachedStorage);
    };
    return FileStorage;
}());
export default FileStorage;
//# sourceMappingURL=FileStorage.js.map